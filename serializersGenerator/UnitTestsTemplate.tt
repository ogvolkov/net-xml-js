<#@ template language="C#" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Serialization" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Web" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>

<# 
	var types = _typesInfo.Types;

	foreach (var type in types)
	{
		var samples = _sampleDataBuilder.CreateAllSampleInstances(type).ToList(); 
		
		for (int i=0; i < samples.Count; i++)
        {
	#>
	test("Deserializing <#=type.Name#>, sample <#=i#>", function() {
		var xml = "<#
			var instance = samples[i];  

			var serializer = new XmlSerializer(type);
			var stringWriter = new StringWriter();
            var escapingWriter = new EscapingTextWriter(stringWriter);
            XmlWriter xmlWriter = XmlWriter.Create(escapingWriter, new XmlWriterSettings { OmitXmlDeclaration = true });			
            serializer.Serialize(xmlWriter, instance);
			
			Write(stringWriter.ToString());
		#>";

		var result = netXmlSerializer.deserialize<#=type.Name#>(xml);
		<# var propertiesComparer = new ObjectPropertiesComparer(WriteLine, types);
		propertiesComparer.CompareObjectProperties("result", instance, type);#>		
	});
<#
        }
	}#>